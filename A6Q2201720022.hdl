CHIP A6Q2201720022 {
    IN a, b, c, d;
    OUT f;

    PARTS:
    // NOT gates
    Not(in=a, out=nota);
    Not(in=b, out=notb);
    Not(in=c, out=notc);
    Not(in=d, out=notd);

    // AND gates for simplified terms
    And(a=nota, b=notb, out=term1); // term1 = ¬a ∧ ¬b
    And(a=a, b=b, out=term2);       // term2 = a ∧ b
    And(a=term1, b=d, out=term3);   // term3 = (¬a ∧ ¬b) ∧ d
    And(a=term2, b=d, out=term4);   // term4 = (a ∧ b) ∧ d

    And(a=nota, b=b, out=term51);
    And(a=term51, b=c, out=term5); // term5 = ¬a ∧ b ∧ c ∧ ¬d
    And(a=a, b=notb, out=term61);
    And(a=term61, b=notc, out=term6); // term6 = a ∧ ¬b ∧ ¬c ∧ ¬d

    // Combine terms using OR gates
    Or(a=term3, b=term4, out=part1);    // part1 = term3 ∨ term4
    Or(a=term5, b=term6, out=part2);   // part2 = term5 ∨ term6
    Or(a=part1, b=part2, out=f);       // f = part1 ∨ part2
}
